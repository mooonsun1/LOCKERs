"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import json
import os
from django.core.exceptions import ImproperlyConfigured

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-5b&@vv+8jy%j=r6mhak-g0m4)33t_c^m9=1-x_!*zz^#o2cl5d"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "login",
    "phonenumber_field",
    "django_bootstrap5",
    "reservation_locker",
    "common",
    "reservation_delivery",
    "payments",
    "faces",
    "field",
    "widget_tweaks",
    'django.contrib.humanize',
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR , 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'locker_system',  # MySQL 데이터베이스 이름
        'USER': 'lockers',  # MySQL 사용자 이름
        'PASSWORD': '1111',  # MySQL 비밀번호
        'HOST': '127.0.0.1',  # MySQL 서버 주소 (일반적으로 'localhost')
        'PORT': '3306',  # MySQL 포트 (기본값: 3306)
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

PHONENUMBER_DEFAULT_FORMAT = 'NATIONAL' # Serializer Field 설정(Defulat=E164)
PHONENUMBER_DB_FORMAT = 'NATIONAL' # Model Field 설정(Defulat=E164)

#####################
# User Model 등록
#####################
AUTH_USER_MODEL = 'login.Users'

#####################
# MEDIA 설정 - 파일업로드 설정
#####################
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

LOGIN_URL = '/login/login'
LOGIN_REDIRECT_URL = '/home/'  # 로그인 후 홈화면으로 리디렉션
LOGOUT_REDIRECT_URL = '/'  # 로그아웃 후 시작화면으로 리디렉션

# LOGIN_URL = '/login/'  # 로그인 페이지의 URL

# settings.py

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  # static 파일들이 저장된 디렉토리
STATIC_ROOT = BASE_DIR / 'staticfiles'  # collectstatic 명령어 실행 시 파일이 모이는 디렉토리

DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB, 필요에 따라 이 값을 조정하세요.
secrets_file = os.path.join(BASE_DIR, 'secrets.json')

# secrets.json 파일 읽기
with open(secrets_file) as f:
    secrets = json.load(f)

def get_secret(setting, secrets=secrets):
    """ Get the secret variable or return explicit exception. """
    try:
        return secrets[setting]
    except KeyError:
        raise ImproperlyConfigured(f"Set the {setting} environment variable.")

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.naver.com'
EMAIL_HOST_USER = 'mansundl22@naver.com'
EMAIL_HOST_PASSWORD = get_secret("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = True
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SECRET_KEY = get_secret("SECRET_KEY")

SITE_ID = 1 